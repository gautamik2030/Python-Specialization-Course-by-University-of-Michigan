Q.1 What is the difference between a Python tuple and Python list?
A.1 lists are mutable, tuples are immutable

Q.2 Which of the following methods work both in Python lists and Python tuples?
A.2 index()

Q.3 What will end up in the variable y after this code is executed?
    x , y = 3, 4
    
A.3 4

Q.4 In the following Python code, what will end up in the variable y?
    x = { 'chuck' : 1 , 'fred' : 42, 'jan': 100}
    y = x.items()

A.4 A list of tuples

Q.5 Which of the following tuples is greater than x in the following Python sequence? 
    x = (5, 1, 3)
    if ??? > x :
    ...
    
A.5 (6, 0, 0)

Q.6 What does the following Python code accomplish, assuming the c is a non-empty dictionary?
    tmp = list()
    for k, v in c.items() :
    tmp.append( (v, k) )
    
A.6 It creates a list of tuples where each tuple is a value, key pair

Q.7 If the variable data is a Python list, how do we sort it in reverse order?
A.7 data.sort(reverse=True)

Q.8 Using the following tuple, how would you print 'Wed'?
    days = ('Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun')
    
A.8 print(days[2])

Q.9 In the following Python loop, why are there two iteration variables (k and v)?
    c = {'a':10, 'b':1, 'c':22}
    for k, v in c.items() :
    ...
    
A.9 Because the items() method in dictionaries returns a list of tuples

Q.10 Given that Python lists and Python tuples are quite similar - when might you prefer to use a tuple over a list?
A.10 For a temporary variable that you will use and discard without modifying
